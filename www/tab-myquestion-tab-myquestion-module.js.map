{"version":3,"sources":["webpack:///./src/app/tab-myquestion/tab-myquestion.module.ts","webpack:///./src/app/tab-myquestion/tab-myquestion.page.html","webpack:///./src/app/tab-myquestion/tab-myquestion.page.scss","webpack:///./src/app/tab-myquestion/tab-myquestion.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEa;AAE1D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;AAWF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QATnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBpC,+cAA+c,iBAAiB,qSAAqS,qBAAqB,+D;;;;;;;;;;;ACA1xB,+DAA+D,2J;;;;;;;;;;;;;;;;;;ACAf;AACI;AAOpD;IAOI,2BAAoB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;QAH7C,cAAS,GAAG,KAAK,CAAC;QAClB,SAAI,GAAG,KAAK,CAAC;IAGb,CAAC;IAED,oCAAQ,GAAR;QACI,oBAAoB;QACpB,+CAA+C;QAC/C,oFAAoF;QACpF,wDAAwD;QACxD,6BAA6B;QAC7B,MAAM;IACV,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBAOC;QANG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,eAAK;YAC5C,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IA1BQ,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;YAC9B,oHAAyC;;SAE5C,CAAC;+EAQgC,iEAAe;OAPpC,iBAAiB,CA4B7B;IAAD,wBAAC;CAAA;AA5B6B","file":"tab-myquestion-tab-myquestion-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabMyquestionPage } from './tab-myquestion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabMyquestionPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TabMyquestionPage]\n})\nexport class TabMyquestionPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>My Question</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <ion-card *ngFor=\\\"let q of Question\\\">\\n        <ion-item *ngIf=\\\"q.user.username\\\">\\n            <ion-icon name=\\\"pin\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>{{q.user.username}}</ion-label>\\n            <ion-button fill=\\\"outline\\\" slot=\\\"end\\\"\\n                        [routerLink]=\\\"['/sidemenu-question/question/tabs/tab-myquestion/answer/', q._id]\\\">\\n                View\\n            </ion-button>\\n        </ion-item>\\n\\n        <ion-card-content>\\n            {{q.question.question}}\\n        </ion-card-content>\\n    </ion-card>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYi1teXF1ZXN0aW9uL3RhYi1teXF1ZXN0aW9uLnBhZ2Uuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {QuestionService} from '../question.service';\n\n@Component({\n    selector: 'app-tab-myquestion',\n    templateUrl: './tab-myquestion.page.html',\n    styleUrls: ['./tab-myquestion.page.scss'],\n})\nexport class TabMyquestionPage implements OnInit {\n\n    Question;\n    ans;\n    checkbool = false;\n    bool = false;\n\n    constructor(private question: QuestionService) {\n    }\n\n    ngOnInit() {\n        // this.bool = true;\n        // console.log(localStorage.getItem('userid'));\n        // this.question.getQuestions(undefined, localStorage.getItem('userid'), undefined);\n        // this.question.questionObservable.subscribe(value => {\n        //     this.Question = value;\n        // });\n    }\n\n    ionViewWillEnter() {\n        this.bool = true;\n        console.log(localStorage.getItem('userid'));\n        this.question.getMyQuestions(localStorage.getItem('userid'));\n        this.question.questionObservable.subscribe(value => {\n            this.Question = value;\n        });\n    }\n\n}\n"],"sourceRoot":""}