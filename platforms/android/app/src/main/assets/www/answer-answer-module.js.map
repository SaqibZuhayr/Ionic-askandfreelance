{"version":3,"sources":["webpack:///./src/app/answer/answer.module.ts","webpack:///./src/app/answer/answer.page.html","webpack:///./src/app/answer/answer.page.scss","webpack:///./src/app/answer/answer.page.ts"],"names":[],"mappings":"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","file":"answer-answer-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\nimport {AnswerPage} from './answer.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AnswerPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [AnswerPage]\n})\nexport class AnswerPageModule {\n}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n            <ion-back-button defaulthref=\\\"\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Answer</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-card *ngIf=\\\"question\\\">\\n        <ion-card-header>\\n            <ion-card-subtitle>{{question.askedBy}}</ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n            <ion-card-title>{{question.question}}</ion-card-title>\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-card>\\n        <ion-card-header>\\n            <ion-card-subtitle>Post Answer</ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n            <form [formGroup]=\\\"pAnswer\\\" (ngSubmit)=\\\"panswer()\\\">\\n                <ion-item>\\n                    <ion-textarea [rows]=\\\"3\\\" formControlName=\\\"answer\\\" type=\\\"text\\\" placeholder=\\\"answer\\\"></ion-textarea>\\n                </ion-item>\\n                <ion-button [disabled]=\\\"!pAnswer.valid\\\" type=\\\"submit\\\" shape=\\\"round\\\" size=\\\"default\\\" color=\\\"primary\\\"\\n                            expand=\\\"block\\\"> Post Answer\\n                </ion-button>\\n            </form>\\n        </ion-card-content>\\n    </ion-card>\\n    <div *ngIf=\\\"question\\\">\\n        <ion-card *ngFor=\\\"let a of question.answers\\\">\\n            <ion-grid>\\n                <ion-row>\\n                    <ion-col class=\\\"vertical-align\\\" size=\\\"1\\\">\\n                        <ion-row>\\n                            <img style=\\\"width: 30px;\\\" class=\\\"image\\\"\\n                                 src=\\\"https://img.icons8.com/ios/30/000000/sort-up.png\\\"\\n                                 (click)=\\\"addScore(a.answer._id)\\\">\\n                        </ion-row>\\n                        <ion-row class=\\\"text\\\">\\n                            <h6>{{a.score}}</h6>\\n                        </ion-row>\\n\\n                        <ion-row>\\n                            <img style=\\\"width: 30px;\\\" src=\\\"https://img.icons8.com/color/30/000000/checkmark.png\\\"\\n                                 *ngIf=\\\"a.answer.approved; else notShow\\\"\\n                                 (click)=\\\"approveAnswer(a.answer._id, a.answer.user_id)\\\">\\n                        </ion-row>\\n                        <ng-template #notShow>\\n                            <ion-row>\\n                                <img style=\\\"width: 30px;\\\"\\n                                     src=\\\"https://img.icons8.com/ios/30/000000/unchecked-checkbox.png\\\">\\n                            </ion-row>\\n                        </ng-template>\\n                        <ion-row (click)=\\\"subScore(a.answer._id)\\\">\\n                            <img style=\\\"width: 30px;\\\" class=\\\"image\\\"\\n                                 src=\\\"https://img.icons8.com/ios/30/000000/sort-down.png\\\">\\n                        </ion-row>\\n                    </ion-col>\\n                    <ion-col>\\n                        <ion-card-header>\\n                            <ion-card-subtitle>{{a.answer.answeredBy}}</ion-card-subtitle>\\n                        </ion-card-header>\\n                        <ion-card-content>\\n                            <ion-card-title>{{a.answer.answer}}</ion-card-title>\\n                        </ion-card-content>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-grid>\\n        </ion-card>\\n    </div>\\n</ion-content>\\n\"","module.exports = \".text {\\n  text-align: center;\\n  padding-left: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYW5zd2VyL0Q6XFxBbmd1bGFyXFxpb25pYy1hc2thbmRmL3NyY1xcYXBwXFxhbnN3ZXJcXGFuc3dlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hbnN3ZXIvYW5zd2VyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXh0e1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nLWxlZnQ6IDVweDtcclxufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n    selector: 'app-answer',\n    templateUrl: './answer.page.html',\n    styleUrls: ['./answer.page.scss'],\n})\nexport class AnswerPage implements OnInit {\n\n    pAnswer: FormGroup;\n    questionID: string;\n    question: any = undefined;\n    userid = ' ';\n    username = ' ';\n\n    constructor(public formBuilder: FormBuilder, public route: ActivatedRoute, public router: Router, private http: HttpClient) {\n        this.pAnswer = this.formBuilder.group({\n            answer: ['', Validators.required],\n        });\n\n    }\n\n    ngOnInit() {\n        this.userid = localStorage.getItem('userid');\n        this.username = localStorage.getItem('username');\n        this.questionID = this.route.snapshot.paramMap.get('id');\n        console.log(this.questionID);\n        this.fetchAnswer();\n\n    }\n\n    onPostAnswer() {\n        // this.pAnswer = new FormGroup({\n        //     answer: new FormControl()\n        // });\n\n\n    }\n\n    fetchAnswer() {\n        this.route.params.subscribe((params) => {\n            this.http.post('http://localhost:3000/answers', {'questionID': params.id}).subscribe((data) => {\n                this.question = data;\n                console.log(data);\n            });\n        });\n    }\n\n    onBack() {\n        console.log('asdasd');\n        this.router.navigate(['/main']);\n    }\n\n    addScore(answerId) {\n        this.ratingAnswer('add', answerId);\n\n    }\n\n    subScore(answerId) {\n        this.ratingAnswer('sub', answerId);\n    }\n\n\n    ratingAnswer(rate, answerId) {\n        if (!localStorage.getItem('userid')) {\n            alert('LOGIN REQUIRED');\n            return;\n        }\n        this.http.post('http://localhost:3000/rateanswer', {\n            rate: rate, answerId: answerId, qId: this.questionID\n            , userid: this.userid\n        })\n            .subscribe((data) => {\n                console.log(data);\n                if (data['message']) {\n                    alert('You have already rated this answer');\n                }\n                this.fetchAnswer();\n            });\n    }\n\n    panswer() {\n        if (!localStorage.getItem('userid')) {\n            alert('LOGIN REQUIRED');\n            return;\n        }\n        console.log('answer');\n        this.http.post('http://localhost:3000/postanswer', {\n             'answer': this.pAnswer.value.answer,\n            'questionID': this.question['questionid'],\n            'userid': this.userid,\n            'answeredBy': this.username\n        })\n            .subscribe((data) => {\n                console.log(data);\n                this.fetchAnswer();\n            });\n\n    }\n\n}\n"],"sourceRoot":""}