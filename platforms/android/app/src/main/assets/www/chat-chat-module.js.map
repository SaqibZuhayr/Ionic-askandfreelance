{"version":3,"sources":["webpack:///./src/app/chat/chat.module.ts","webpack:///./src/app/chat/chat.page.html","webpack:///./src/app/chat/chat.page.scss","webpack:///./src/app/chat/chat.page.ts","webpack:///./src/app/message-service.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEN;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAWF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB3B,+XAA+X,qBAAqB,skBAAskB,cAAc,qhBAAqhB,cAAc,gaAAga,cAAc,qOAAqO,gEAAgE,uJAAuJ,cAAc,sR;;;;;;;;;;;ACAn4E,4BAA4B,gCAAgC,EAAE,gBAAgB,gCAAgC,mCAAmC,EAAE,aAAa,uBAAuB,EAAE,gBAAgB,wBAAwB,EAAE,gBAAgB,qBAAqB,sBAAsB,4BAA4B,wBAAwB,kBAAkB,qBAAqB,EAAE,uBAAuB,qBAAqB,kBAAkB,4BAA4B,wBAAwB,EAAE,kBAAkB,wBAAwB,0BAA0B,sBAAsB,uBAAuB,wBAAwB,mCAAmC,uBAAuB,mBAAmB,EAAE,cAAc,oBAAoB,EAAE,uBAAuB,wBAAwB,sBAAsB,EAAE,wBAAwB,wBAAwB,sBAAsB,iBAAiB,EAAE,sBAAsB,uBAAuB,EAAE,+CAA+C,+xE;;;;;;;;;;;;;;;;;;;;;ACA96B;AACJ;AACU;AAC1B;AAWvC;IAaI,8CAA8C;IAE9C,kBAAoB,UAAiC,EAAU,KAAqB;QAAhE,eAAU,GAAV,UAAU,CAAuB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAVpF,YAAO,GAAG,EAAE,CAAC;QAEb,iBAAY,GAAG,EAAE,CAAC;QAGlB,WAAM,GAAG,KAAK,CAAC;QAMX,IAAI,CAAC,MAAM,GAAG,6CAAE,CAAC,uBAAuB,CAAC,CAAC;IAC9C,CAAC;IAED,2BAAQ,GAAR;QAAA,iBA6BC;QA5BG,4BAA4B;QAC5B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YACnC,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC;YAChC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,EAAE,CAAC;YAC5B,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACjD,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YACrE,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE;gBAC1B,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;gBACrE,UAAU,CAAC;oBACP,KAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC,uBAAuB;gBAC1D,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QAGP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,cAAI;YAE5B,IAAI,IAAI,CAAC,MAAM,KAAK,KAAI,CAAC,YAAY,EAAE;gBACnC,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACtB;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,cAAI;YAC3B,IAAI,IAAI,CAAC,MAAM,KAAK,KAAI,CAAC,YAAY,EAAE;gBACnC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAe,GAAf;QACI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,wBAAuB;IACzD,CAAC;IAED,8BAAW,GAAX;QAAA,iBAgBC;QAfG,gCAAgC;QAChC,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,UAAU;iBACV,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,EACzE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC;iBACpD,SAAS,CAAC,cAAI;gBACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;gBAChC,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACjD,KAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;gBAC/B,6BAA6B;YAEjC,CAAC,CAAC,CAAC;SACV;IACL,CAAC;IAED,iCAAc,GAAd,UAAe,QAAQ,EAAE,UAAU;QAAnC,iBAMC;QALG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YACvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC9C,CAAC,CACJ,CAAC;IACN,CAAC;IAED,2BAAQ,GAAR;QAAA,iBAkBC;QAjBG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE;YAC7B,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;YACxC,QAAQ,EAAE,IAAI,CAAC,YAAY;SAC9B,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACpC;QAED,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;YAC5B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE;gBAC5B,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;gBACxC,QAAQ,EAAE,KAAI,CAAC,YAAY;aAC9B,CAAC,CAAC;QACP,CAAC,EAAE,GAAG,CAAC,CAAC;IAGZ,CAAC;IAjGqB;QAArB,+DAAS,CAAC,SAAS,CAAC;;6CAAc;IAD1B,QAAQ;QARpB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;YACpB,sFAA+B;YAC/B,OAAO,EAAE;gBACL,OAAO,EAAE,IAAI,uDAAS,CAAC,SAAS,CAAC;aACpC;;SAEJ,CAAC;+EAgBkC,8EAAqB,EAAiB,8DAAc;OAf3E,QAAQ,CA0GpB;IAAD,eAAC;CAAA;AA1GoB;;;;;;;;;;;;;;;;;;;ACdoB;AACO;AAMhD;IAEI,+BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,2CAAW,GAAX,UAAY,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE;YAChD,QAAQ;YACR,UAAU;YACV,UAAU;YACV,YAAY;YACZ,OAAO;SACV,CAAC,CAAC;IACP,CAAC;IAED,0CAAU,GAAV,UAAW,QAAQ,EAAE,UAAU;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,+BAA+B,EAAE;YACnD,QAAQ;YACR,UAAU;SACb,CAAC,CAAC;IACP,CAAC;IApBQ,qBAAqB;QAHjC,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;+EAG4B,+DAAU;OAF3B,qBAAqB,CAsBjC;IAAD,4BAAC;CAAA;AAtBiC","file":"chat-chat-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatPage } from './chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ChatPage]\n})\nexport class ChatPageModule {}\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar color=\\\"primary\\\">\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-menu-button></ion-menu-button>\\r\\n            <ion-back-button defaulthref=\\\"\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>Chat</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content #content style=\\\"margin-top: 10px; margin-bottom: 10px;\\\">\\r\\n    <div class=\\\"row\\\" ngx-auto-scroll lock-y-offset=\\\"10\\\" observe-attributes>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"message-wrapper\\\" *ngFor=\\\"let message of messageArray\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <ion-card class=\\\"row left\\\" *ngIf=\\\"username != receivername && username != message.sendername\\\">\\r\\n                        <div style=\\\"float: left\\\" class=\\\"col-sm-12 chat-bubble left slide-left\\\">\\r\\n                            <ion-card-content class=\\\"message\\\">\\r\\n                                <p>{{message.body}}</p>\\r\\n                            </ion-card-content>\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                    </ion-card>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <ion-card class=\\\"row right\\\" *ngIf=\\\"username === message.sendername\\\">\\r\\n                        <div style=\\\"float: right\\\" class=\\\"col-sm-12 chat-bubble right slide-right\\\">\\r\\n                            <ion-card-content class=\\\"message\\\">\\r\\n                                <p>{{message.body}}</p>\\r\\n                            </ion-card-content>\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                    </ion-card>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"left col-sm-12\\\" *ngIf=\\\"typing\\\">\\r\\n                <ion-card class=\\\"chat-bubble left slide-left\\\">\\r\\n                    <div class=\\\"message\\\">\\r\\n                        <p>{{receivername}} is typing</p>\\r\\n                    </div>\\r\\n                </ion-card>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</ion-content>\\r\\n<ion-footer no-border>\\r\\n    <ion-item text-wrap style=\\\"margin-top: 0px; !important\\\">\\r\\n        <ion-textarea style=\\\"font-size: 16px;\\\" id=\\\"msgInput\\\" placeholder=\\\"Send a message ...\\\" (keypress)=\\\"isTyping()\\\"\\r\\n                      [(ngModel)]=\\\"message\\\" style=\\\"width:inherit; height: 40px;\\\"\\r\\n                      name=\\\"message\\\">\\r\\n        </ion-textarea>\\r\\n        <ion-button size=\\\"large\\\" ion-button clear item-end (click)=\\\"sendMessage()\\\">\\r\\n            <img src=\\\"../assets/icon/send.png\\\">\\r\\n        </ion-button>\\r\\n    </ion-item>\\r\\n</ion-footer>\"","module.exports = \"ion-card {\\n  box-shadow: none !important; }\\n\\n.card-body {\\n  padding-top: 5px !important;\\n  padding-bottom: 5px !important; }\\n\\n.circle {\\n  border-radius: 50%; }\\n\\n.card-body {\\n  border-radius: 15px; }\\n\\n.chat-body {\\n  margin-top: 10px;\\n  padding-top: 10px;\\n  background-color: white;\\n  border-radius: 15px;\\n  height: 380px;\\n  overflow-y: auto; }\\n\\n.chat-body-footer {\\n  margin-top: 10px;\\n  padding: 10px;\\n  background-color: white;\\n  border-radius: 15px; }\\n\\n.chat-bubble {\\n  border-radius: 10px;\\n  display: inline-block;\\n  padding-top: 10px;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  padding-bottom: 0px !important;\\n  position: relative;\\n  max-width: 80%; }\\n\\n.message {\\n  font-size: 15px; }\\n\\n.chat-bubble.left {\\n  background: #f1f0f0;\\n  margin-left: 15px; }\\n\\n.chat-bubble.right {\\n  background: #64b5f6;\\n  margin-right: 7px;\\n  color: white; }\\n\\n.message-wrapper {\\n  position: relative; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdC9EOlxcQW5ndWxhclxcaW9uaWMtYXNrYW5kZi9zcmNcXGFwcFxcY2hhdFxcY2hhdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwyQkFBMkIsRUFBQTs7QUFFN0I7RUFDRSwyQkFBMkI7RUFDM0IsOEJBQThCLEVBQUE7O0FBR2hDO0VBQ0Usa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxtQkFBbUI7RUFDbkIscUJBQXFCO0VBQ3JCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLDhCQUE4QjtFQUM5QixrQkFBa0I7RUFDbEIsY0FBYyxFQUFBOztBQUdoQjtFQUNFLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxtQkFBbUI7RUFDbkIsaUJBQWlCLEVBQUE7O0FBR25CO0VBQ0UsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixZQUFZLEVBQUE7O0FBR2Q7RUFDRSxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NoYXQvY2hhdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZHtcclxuICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuLmNhcmQtYm9keSB7XHJcbiAgcGFkZGluZy10b3A6IDVweCAhaW1wb3J0YW50O1xyXG4gIHBhZGRpbmctYm90dG9tOiA1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmNpcmNsZSB7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcblxyXG4uY2FyZC1ib2R5IHtcclxuICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG59XHJcblxyXG4uY2hhdC1ib2R5IHtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgaGVpZ2h0OiAzODBweDtcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcblxyXG4uY2hhdC1ib2R5LWZvb3RlciB7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbn1cclxuXHJcbi5jaGF0LWJ1YmJsZSB7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDBweCAhaW1wb3J0YW50O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXgtd2lkdGg6IDgwJTtcclxufVxyXG5cclxuLm1lc3NhZ2Uge1xyXG4gIGZvbnQtc2l6ZTogMTVweDtcclxufVxyXG5cclxuLmNoYXQtYnViYmxlLmxlZnQge1xyXG4gIGJhY2tncm91bmQ6ICNmMWYwZjA7XHJcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XHJcbn1cclxuXHJcbi5jaGF0LWJ1YmJsZS5yaWdodCB7XHJcbiAgYmFja2dyb3VuZDogIzY0YjVmNjtcclxuICBtYXJnaW4tcmlnaHQ6IDdweDtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5tZXNzYWdlLXdyYXBwZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufSJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MessageServiceService} from '../message-service.service';\nimport * as io from 'socket.io-client';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n    selector: 'app-chat',\n    templateUrl: './chat.page.html',\n    queries: {\n        content: new ViewChild('content')\n    },\n    styleUrls: ['./chat.page.scss'],\n})\nexport class ChatPage implements OnInit {\n    @ViewChild('content') content: any;\n    tabElement: any;\n    receivername: string;\n    receiverid: string;\n    message = '';\n    username: string;\n    messageArray = [];\n    socket: any;\n    typingMessage;\n    typing = false;\n    conversations: any;\n\n    // @ViewChild('content') private content: any;\n\n    constructor(private msgService: MessageServiceService, private route: ActivatedRoute) {\n        this.socket = io('http://localhost:3000');\n    }\n\n    ngOnInit() {\n        //  scroll.scrollToBottom();\n        this.route.queryParams.subscribe(params => {\n            this.receivername = params.name;\n            this.receiverid = params.id;\n            this.username = localStorage.getItem('username');\n            this.GetAllMessages(localStorage.getItem('userid'), this.receiverid);\n            this.socket.on('refreshPage', () => {\n                this.GetAllMessages(localStorage.getItem('userid'), this.receiverid);\n                setTimeout(() => {\n                    this.content.scrollToBottom(); //300ms animation speed\n                });\n            });\n\n\n        });\n\n        this.socket.on('is_typing', data => {\n\n            if (data.sender === this.receivername) {\n                this.typing = true;\n            }\n        });\n\n        this.socket.on('has_stop', data => {\n            if (data.sender === this.receivername) {\n                this.typing = false;\n            }\n        });\n    }\n\n    ionViewDidEnter() {\n        this.content.scrollToBottom();//300ms animation speed\n    }\n\n    sendMessage() {\n        //  this.scrollToBottomOnInit();\n        if (this.message) {\n            this.msgService\n                .SendMessage(localStorage.getItem('userid'), localStorage.getItem('username'),\n                    this.receiverid, this.receivername, this.message)\n                .subscribe(data => {\n                    console.log(data);\n                    this.socket.emit('refresh', {});\n                    this.message = '';\n                    this.tabElement = document.querySelector('input');\n                     this.content.scrollToBottom();\n                    // this.tabElement.text = '';\n\n                });\n        }\n    }\n\n    GetAllMessages(senderid, receiverid) {\n        this.msgService.GetMessage(senderid, receiverid).subscribe(data => {\n                console.log(data);\n                this.messageArray = data.messages.message;\n            }\n        );\n    }\n\n    isTyping() {\n        this.socket.emit('start_typing', {\n            sender: localStorage.getItem('username'),\n            receiver: this.receivername\n        });\n\n        if (this.typingMessage) {\n            clearTimeout(this.typingMessage);\n        }\n\n        this.typingMessage = setTimeout(() => {\n            this.socket.emit('stop_typing', {\n                sender: localStorage.getItem('username'),\n                receiver: this.receivername\n            });\n        }, 500);\n\n\n    }\n\n\n    // scrollToBottomOnInit() {\n    //     this.content.scrollToBottom(200);\n    // }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MessageServiceService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    SendMessage(senderId, senderName, receiverId, receiverName, message): Observable<any> {\n        return this.http.post(`http://localhost:3000/chat`, {\n            senderId,\n            senderName,\n            receiverId,\n            receiverName,\n            message\n        });\n    }\n\n    GetMessage(senderId, receiverId): Observable<any> {\n        return this.http.post(`http://localhost:3000/getchat`, {\n            senderId,\n            receiverId,\n        });\n    }\n\n}\n"],"sourceRoot":""}