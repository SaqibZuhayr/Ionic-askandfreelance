{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts","webpack:///./src/app/user.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAuC;AACM;AACF;AACU;AACF;AACR;AAEJ;AAEvC,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACvB;CACJ,CAAC;AAYF;IAAA;IACA,CAAC;IADY,eAAe;QAV3B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,kEAAmB;aACtB;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC5B,CAAC;OACW,eAAe,CAC3B;IAAD,sBAAC;CAAA;AAD2B;;;;;;;;;;;;AC1B5B,q0B;;;;;;;;;;;ACAA,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;ACAf;AAC+B;AACnC;AACL;AAQvC;IAGI,mBAAmB,WAAwB,EAAU,IAAiB,EAAU,KAAa;QAA1E,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,UAAK,GAAL,KAAK,CAAQ;QACzF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACP,CAAC;IAED,2BAAO,GAAP;QAAA,iBAiBC;QAhBG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBAChB,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC/C,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrD,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;gBACvD,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC/B,UAAU;aACb;iBAAM;gBACH,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBAC3B,UAAU;aAEb;QACL,CAAC,CAAC,CAAC;IAGP,CAAC;IAED,4BAAQ,GAAR;IACA,CAAC;IA9BQ,SAAS;QALrB,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,yFAAgC;;SAEnC,CAAC;+EAIkC,0DAAW,EAAgB,yDAAW,EAAiB,sDAAM;OAHpF,SAAS,CAgCrB;IAAD,gBAAC;CAAA;AAhCqB;;;;;;;;;;;;;;;;;;;ACXmB;AACO;AAKhD;IAEI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,2BAAK,GAAL,UAAM,IAAI;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iCAAiC,EAAE;YACrD,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;YACzB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;SAClC,CAAC,CAAC;IACP,CAAC;IAVQ,WAAW;QAHvB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;+EAG4B,+DAAU;OAF3B,WAAW,CAYvB;IAAD,kBAAC;CAAA;AAZuB","file":"login-login-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\nimport {LoginPage} from './login.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes),\n        ReactiveFormsModule\n    ],\n    declarations: [LoginPage]\n})\nexport class LoginPageModule {\n}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>login</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content content=\\\"padding\\\">\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"logForm()\\\">\\n        <ion-item>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Email\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-input formControlName=\\\"password\\\" type=\\\"text\\\" placeholder=\\\"Password\\\"></ion-input>\\n        </ion-item>\\n        <ion-button [disabled]=\\\"!loginForm.valid\\\" type=\\\"submit\\\" shape=\\\"round\\\" size=\\\"default\\\" color=\\\"primary\\\"\\n                    expand=\\\"block\\\">Login\\n        </ion-button>\\n        <ion-grid>\\n            <ion-label><a href=\\\"/signup\\\">Signup</a></ion-label>\\n        </ion-grid>\\n    </form>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {UserService} from '../user.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.page.html',\n    styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n    loginForm: FormGroup;\n\n    constructor(public formBuilder: FormBuilder, private user: UserService, private route: Router) {\n        this.loginForm = this.formBuilder.group({\n            email: ['', Validators.required],\n            password: ['', Validators.required],\n        });\n    }\n\n    logForm() {\n        this.user.login(this.loginForm).subscribe((data) => {\n            console.log(data);\n            if (data[0]['_id']) {\n                localStorage.setItem('userid', data[0]['_id']);\n                localStorage.setItem('username', data[0]['username']);\n                 this.route.navigate(['./sidemenu-question/question']);\n                console.log('login Succesful');\n                // return;\n            } else {\n                alert('wrong credentails');\n                // return;\n\n            }\n        });\n\n\n    }\n\n    ngOnInit() {\n    }\n\n}\n\n\n\n\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    login(form) {\n        return this.http.post('http://localhost:3000/user/auth', {\n            'email': form.value.email,\n            'password': form.value.password\n        });\n    }\n\n}\n"],"sourceRoot":""}