{"version":3,"sources":["webpack:///./src/app/signup/signup.module.ts","webpack:///./src/app/signup/signup.page.html","webpack:///./src/app/signup/signup.page.scss","webpack:///./src/app/signup/signup.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAuC;AACM;AACF;AACU;AACF;AAGR;AAEF;AAEzC,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACxB;CACJ,CAAC;AAYF;IAAA;IACA,CAAC;IADY,gBAAgB;QAV5B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,kEAAmB;aACtB;YACD,YAAY,EAAE,CAAC,uDAAU,CAAC;SAC7B,CAAC;OACW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;AC5B7B,wxC;;;;;;;;;;;ACAA,+DAA+D,uI;;;;;;;;;;;;;;;;;;;;ACAf;AACkB;AAClB;AACT;AAOvC;IAGI,oBAAmB,WAAwB,EAAU,IAAgB,EAAU,MAAc;QAA1E,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QACzF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACxC,CAAC,CAAC;IACP,CAAC;IAED,2BAAM,GAAN;QAAA,iBAYC;QAXG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE;YACzC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS;YAC7C,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;YAC3C,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK;YACpC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;YAC1C,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;SAC7C,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,6BAAQ,GAAR;IACA,CAAC;IA7BQ,UAAU;QALtB,+DAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,4FAAiC;;SAEpC,CAAC;+EAIkC,0DAAW,EAAgB,+DAAU,EAAkB,sDAAM;OAHpF,UAAU,CA+BtB;IAAD,iBAAC;CAAA;AA/BsB","file":"signup-signup-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SignupPage} from './signup.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SignupPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes),\n        ReactiveFormsModule\n    ],\n    declarations: [SignupPage]\n})\nexport class SignupPageModule {\n}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>signup</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"signup()\\\">\\n        <ion-item>\\n            <ion-input formControlName=\\\"firstName\\\" type=\\\"text\\\" placeholder=\\\"First Name\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-input formControlName=\\\"lastName\\\" type=\\\"text\\\" placeholder=\\\"Last Name\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-input formControlName=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"Username\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Email\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-input formControlName=\\\"password\\\" type=\\\"text\\\" placeholder=\\\"Password\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-input formControlName=\\\"repassword\\\" type=\\\"text\\\" placeholder=\\\"Repassword\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-button [disabled]=\\\"!signupForm.valid\\\" type=\\\"submit\\\" shape=\\\"round\\\" size=\\\"default\\\" color=\\\"primary\\\"\\n                    expand=\\\"block\\\">Signup\\n        </ion-button>\\n    </form>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.page.html',\n    styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n    signupForm: FormGroup;\n\n    constructor(public formBuilder: FormBuilder, private http: HttpClient, private router: Router) {\n        this.signupForm = this.formBuilder.group({\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            username: ['', Validators.required],\n            email: ['', Validators.required],\n            password: ['', Validators.required],\n            repassword: ['', Validators.required],\n        });\n    }\n\n    signup() {\n        this.http.post('http://localhost:3000/user', {\n            'first_name': this.signupForm.value.firstName,\n            'last_name': this.signupForm.value.lastName,\n            'email': this.signupForm.value.email,\n            'username': this.signupForm.value.username,\n            'password': this.signupForm.value.password\n        }).subscribe((data) => {\n            console.log(data);\n            this.router.navigate(['/login']);\n        });\n\n    }\n\n    ngOnInit() {\n    }\n\n}\n"],"sourceRoot":""}