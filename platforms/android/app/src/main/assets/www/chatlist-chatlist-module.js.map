{"version":3,"sources":["webpack:///./src/app/chatlist/chatlist.module.ts","webpack:///./src/app/chatlist/chatlist.page.html","webpack:///./src/app/chatlist/chatlist.page.scss","webpack:///./src/app/chatlist/chatlist.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,6uBAA6uB,eAAe,uM;;;;;;;;;;;ACA5vB,+DAA+D,2I;;;;;;;;;;;;;;;;;;;ACAf;AACT;AACS;AAOhD;IAGI,sBAAoB,MAAc,EAAU,IAAgB;QAAxC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAY;QAD5D,kBAAa,GAAQ,SAAS,CAAC;IAE/B,CAAC;IAED,+BAAQ,GAAR;IACA,CAAC;IAED,uCAAgB,GAAhB;QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED,yCAAkB,GAAlB;QAAA,iBAQC;QAPG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wCAAwC,EAAE,EAAC,QAAQ,EAAE,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAC,CAAC;aAC/F,SAAS,CAAC,UAAC,IAAI;YACZ,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAGtB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,2BAAI,GAAJ,UAAK,EAAE,EAAE,QAAQ;QACb,iDAAiD;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gDAAgD,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAC,EAAC,CAAC,CAAC;IACtH,CAAC;IA1BQ,YAAY;QALxB,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,kGAAmC;;SAEtC,CAAC;+EAI8B,sDAAM,EAAgB,+DAAU;OAHnD,YAAY,CA2BxB;IAAD,mBAAC;CAAA;AA3BwB","file":"chatlist-chatlist-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatlistPage } from './chatlist.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatlistPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ChatlistPage]\n})\nexport class ChatlistPageModule {}\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar color=\\\"primary\\\">\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-menu-button></ion-menu-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>Chat List</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <div *ngIf=\\\"conversations\\\">\\r\\n        <ion-card *ngFor=\\\"let user of conversations\\\">\\r\\n            <ion-item>\\r\\n                <ion-avatar class=\\\"ionAvatar\\\" itemstart>\\r\\n                    <img src=\\\"http://placehold.it/50*50\\\">\\r\\n                </ion-avatar>\\r\\n                <ion-grid>\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <h5><a (click)=\\\"chat(user._id, user.username)\\\">{{user.username}}</a></h5>\\r\\n                        </ion-col>\\r\\n\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n    </div>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXRsaXN0L2NoYXRsaXN0LnBhZ2Uuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n    selector: 'app-chatlist',\n    templateUrl: './chatlist.page.html',\n    styleUrls: ['./chatlist.page.scss'],\n})\nexport class ChatlistPage implements OnInit {\n\n    conversations: any = undefined;\n    constructor(private router: Router, private http: HttpClient) {\n    }\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n        this.fetchConversations();\n    }\n\n    fetchConversations() {\n        this.http.post('http://localhost:3000/getConversations', {'userid': localStorage.getItem('userid')})\n            .subscribe((data) => {\n                this.conversations = data;\n                console.log(data);\n\n\n            });\n    }\n\n    chat(id, username) {\n        // console.log(this.receiverid,this.receivername)\n        this.router.navigate(['sidemenu-question/freelance/tabf/chatlist/chat'], {queryParams: {id: id, name: username}});\n    }\n}\n"],"sourceRoot":""}