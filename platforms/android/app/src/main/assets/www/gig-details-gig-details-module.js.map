{"version":3,"sources":["webpack:///./src/app/gig-details/gig-details.module.ts","webpack:///./src/app/gig-details/gig-details.page.html","webpack:///./src/app/gig-details/gig-details.page.scss","webpack:///./src/app/gig-details/gig-details.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACM;AACI;AAEV;AAEO;AAEpD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAc;KAC1B;CACF,CAAC;AAYF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAVhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACT,kEAAmB;gBACrB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,gEAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;AC3BjC,+VAA+V,WAAW,gDAAgD,cAAc,2DAA2D,WAAW,kGAAkG,UAAU,oCAAoC,iBAAiB,+sC;;;;;;;;;;;ACA/oB,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;ACAf;AACO;AACP;AACkB;AAQlE;IAOI,wBAAmB,WAAwB,EAAU,MAAc,EAAU,KAAqB,EAAU,IAAgB;QAAzG,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAH5H,QAAG,GAAG,SAAS,CAAC;QAIZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAClC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,iBAAiB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjD,CAAC,CAAC;IACP,CAAC;IAGD,iCAAQ,GAAR;IACA,CAAC;IAED,yCAAgB,GAAhB;QACI,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,wCAAe,GAAf;QAAA,iBAYC;QAVG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAM;YAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACvB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAC,OAAO,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBACnF,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACjC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBACrC,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;YAGpB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6BAAI,GAAJ,UAAK,EAAE,EAAE,QAAQ;QACb,iDAAiD;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gDAAgD,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAC,EAAC,CAAC,CAAC;IACtH,CAAC;IAED,iCAAQ,GAAR;QAEI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACjC,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACxB,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mCAAmC,EAAE;YAChD,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM;YAClD,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG;SACvD,CAAC;aACG,SAAS,CAAC,UAAC,IAAI;YACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACX,CAAC;IAzDQ,cAAc;QAL1B,+DAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,2GAAsC;;SAEzC,CAAC;+EAQkC,0DAAW,EAAkB,sDAAM,EAAiB,8DAAc,EAAgB,+DAAU;OAPnH,cAAc,CA4D1B;IAAD,qBAAC;CAAA;AA5D0B","file":"gig-details-gig-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GigDetailsPage } from './gig-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GigDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n      ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [GigDetailsPage]\n})\nexport class GigDetailsPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>Gigs</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n\\n    <ion-card *ngIf=\\\"Gig\\\">\\n        <ion-card-header>\\n            <img src=\\\"{{Gig.photo}}\\\">\\n            <ion-card-subtitle>Username: {{Gig.username}}</ion-card-subtitle>\\n            <ion-card-title>Title: {{Gig.title}}</ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n            <p>Rate: {{Gig.rate}}</p>\\n            <p>Description: {{Gig.description}}</p>\\n        </ion-card-content>\\n\\n        <ion-card-content>\\n            <ion-button fill=\\\"outline\\\" slot=\\\"end\\\" (click)=\\\"chat(Gig._id, Gig.username)\\\">\\n                Chat\\n            </ion-button>\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-card>\\n        <form [formGroup]=\\\"gigForm\\\" (ngSubmit)=\\\"gigsForm()\\\">\\n            <ion-item>\\n                <ion-input formControlName=\\\"order_name\\\" type=\\\"text\\\" placeholder=\\\"Order Name\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-input formControlName=\\\"order_price\\\" type=\\\"text\\\" placeholder=\\\"Order Rate\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-input formControlName=\\\"order_description\\\" type=\\\"text\\\" placeholder=\\\"Order Description\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-input formControlName=\\\"order_delivery_time\\\" type=\\\"text\\\" placeholder=\\\"Order Delivery Time\\\"></ion-input>\\n            </ion-item>\\n            <ion-button [disabled]=\\\"!gigForm.valid\\\" type=\\\"submit\\\" color=\\\"success\\\" slot=\\\"end\\\" >\\n                Create Order\\n            </ion-button>\\n\\n        </form>\\n    </ion-card>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dpZy1kZXRhaWxzL2dpZy1kZXRhaWxzLnBhZ2Uuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../user.service';\n\n@Component({\n    selector: 'app-gig-details',\n    templateUrl: './gig-details.page.html',\n    styleUrls: ['./gig-details.page.scss'],\n})\nexport class GigDetailsPage implements OnInit {\n    receivername: string;\n    receiverid: string;\n    userid: string;\n    Gig = undefined;\n    gigForm: FormGroup;\n\n    constructor(public formBuilder: FormBuilder, private router: Router, private route: ActivatedRoute, private http: HttpClient) {\n        this.gigForm = this.formBuilder.group({\n            order_name: ['', Validators.required],\n            order_price: ['', Validators.required],\n            order_description: ['', Validators.required],\n            order_delivery_time: ['', Validators.required],\n        });\n    }\n\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n        this.userid = localStorage.getItem('userid');\n        this.fetchGigDetails();\n    }\n\n    fetchGigDetails() {\n\n        this.route.params.subscribe((params) => {\n            console.log(params.id);\n            this.http.post('http://localhost:3000/gigdetail', {'gigid': params.id}).subscribe((data) => {\n                this.receiverid = data['userid'];\n                this.receivername = data['username'];\n                this.Gig = data;\n\n\n            });\n        });\n    }\n\n    chat(id, username) {\n        // console.log(this.receiverid,this.receivername)\n        this.router.navigate(['sidemenu-question/freelance/tabf/chatlist/chat'], {queryParams: {id: id, name: username}});\n    }\n\n    gigsForm() {\n\n        if (!localStorage.getItem('userid')) {\n            alert('LOGIN REQUIRED');\n            return;\n        }\n        this.http.post('http://localhost:3000/submitOrder', {\n            'order': this.gigForm.value, 'userid': this.userid,\n            'receiverid': this.receiverid, 'gigid': this.Gig._id,\n        })\n            .subscribe((data) => {\n                console.log(data);\n            });\n    }\n\n\n}\n"],"sourceRoot":""}